[1mdiff --cc OfficeMenStore/officemenstore.customerapp/src/app-routes.jsx[m
[1mindex 17ec3bd,05291e2..0000000[m
[1m--- a/OfficeMenStore/officemenstore.customerapp/src/app-routes.jsx[m
[1m+++ b/OfficeMenStore/officemenstore.customerapp/src/app-routes.jsx[m
[36m@@@ -14,8 -12,7 +14,12 @@@[m [mimport [m
    NewspaperIcon,[m
    UsersIcon,[m
  } from '@heroicons/react/24/solid';[m
[32m++<<<<<<< HEAD[m
[32m +import { useSelector, useDispatch } from 'react-redux';[m
[32m +[m
[32m++=======[m
[32m+ import { Dashboard, Tables, Notifications } from '@/pages/user';[m
[32m++>>>>>>> dev[m
  import { SignIn, SignUp } from '@/pages/auth';[m
  import Home from './pages/home';[m
  import Product from './pages/product';[m
[36m@@@ -34,14 -34,24 +39,29 @@@[m [mexport const routes = [m
        //Route in sidebar[m
        { icon: <HomeIcon {...icon} />, name: 'Home', path: '/home', element: <Home /> },[m
        { icon: <ShoppingBagIcon {...icon} />, name: 'product', path: '/product', element: <Product /> },[m
[31m -      { icon: <ShoppingCartIcon {...icon} />, name: 'Cart', path: '/cart', element: <Cart /> },[m
[32m +      {[m
[32m +        icon: <ShoppingCartIcon {...icon} />,[m
[32m +        name: 'Cart',[m
[32m +        path: '/cart',[m
[32m +        element: <Cart />,[m
[32m +      },[m
        { icon: <UserCircleIcon {...icon} />, name: 'Account', path: '/account', element: <Accounts /> },[m
[32m+       {[m
[32m+         icon: <InformationCircleIcon {...icon} />,[m
[32m+         name: 'notifications',[m
[32m+         path: '/notifications',[m
[32m+         element: <Notifications />,[m
[32m+       },[m
        // { icon: <TableCellsIcon {...icon} />, name: 'tables', path: '/tables', element: <Tables /> },[m
[32m+       //admin[m
[32m+       { icon: <Squares2X2Icon {...icon} />, name: 'Dashboard', path: '/dashboard', element: <Dashboard /> },[m
[32m+       { icon: <CubeIcon {...icon} />, name: 'allproduct', path: '/allproduct', element: <AllProducts /> },[m
[32m+       { path: '/allproduct/addproducts', element: <AddProducts /> },[m
[32m+       { path: '/allproduct/updateproduct', element: <UpdateProduct /> },[m
[32m+       { icon: <UsersIcon {...icon} />, name: 'allcustomers', path: '/allcustomers', element: <CustomerTable /> },[m
[32m+ [m
[32m+       { icon: <NewspaperIcon {...icon} />, name: 'Orders', path: '/allorders', element: <Oders /> },[m
[32m+       { path: '/allorders/ordersdetail', element: <OdersDetails /> },[m
  [m
        //Product[m
        { path: '/product/details/:id', element: <Details /> },[m
[1mdiff --cc OfficeMenStore/officemenstore.customerapp/src/pages/cart/PaymentForm.jsx[m
[1mindex 0de0ff4,b511059..0000000[m
[1m--- a/OfficeMenStore/officemenstore.customerapp/src/pages/cart/PaymentForm.jsx[m
[1m+++ b/OfficeMenStore/officemenstore.customerapp/src/pages/cart/PaymentForm.jsx[m
[36m@@@ -28,12 -22,6 +28,15 @@@[m [mfunction Payment({ formData, onSubmit, [m
    const cartItems = useSelector((state) => state.cart.cartItems);[m
    const totalAmount = useSelector((state) => state.cart.totalAmount);[m
    console.log(cartItems);[m
[32m++<<<<<<< HEAD[m
[32m +[m
[32m +  const [open, setOpen] = React.useState(0);[m
[32m +  const handleOpen = (value) => {[m
[32m +    setOpen(open === value ? 0 : value);[m
[32m +  };[m
[32m +  // from ddien thong tin[m
[32m++=======[m
[32m++>>>>>>> dev[m
    const formik = useFormik({[m
      initialValues: {[m
        cardNumber: formData.cardNumber || '',[m
[36m@@@ -118,97 -105,81 +121,153 @@@[m
  [m
            <CardBody className="pt-0 pb-2 mt-5 mr-5 ml-5 ">[m
              <div className="w-full flex flex-col ">[m
[31m -              <form className="mt-2 mb-2 mx-auto max-w-screen-lg xl:w-full" onSubmit={formik.handleSubmit}>[m
[31m -                <div className="mb-4">[m
[31m -                  <Typography variant="small" color="blue-gray" className="font-medium">[m
[31m -                    Card Number[m
[31m -                  </Typography>[m
[31m -                  <Input[m
[31m -                    size="lg"[m
[31m -                    placeholder="Enter card number"[m
[31m -                    name="cardNumber"[m
[31m -                    value={formik.values.cardNumber}[m
[31m -                    onChange={formik.handleChange}[m
[31m -                    error={formik.touched.cardNumber && formik.errors.cardNumber}[m
[32m +              <Accordion[m
[32m +                open={open === 1}[m
[32m +                icon={[m
[32m +                  <ChevronDownIcon[m
[32m +                    strokeWidth={2.5}[m
[32m +                    className={`mx-auto h-4 w-4 transition-transform ${open === 1 ? 'rotate-180' : ''}`}[m
                    />[m
[31m -                  {formik.touched.cardNumber && formik.errors.cardNumber && ([m
[31m -                    <p className="text-red-500 text-sm">{formik.errors.cardNumber}</p>[m
[31m -                  )}[m
[31m -                </div>[m
[31m -                <div className="flex gap-6">[m
[31m -                  <div className="w-full mb-4">[m
[31m -                    <Typography variant="small" color="blue-gray" className="font-medium">[m
[31m -                      Expiration Date[m
[32m +                }[m
[32m +              >[m
[32m +                <ListItem className="p-0" selected={open === 1}>[m
[32m +                  <AccordionHeader onClick={() => handleOpen(1)} className="border-b-0 p-3">[m
[32m +                    <ListItemPrefix>[m
[32m +                      <PresentationChartBarIcon className="h-5 w-5" />[m
[32m +                    </ListItemPrefix>[m
[32m +                    <Radio overlay defaultChecked />[m
[32m +                    <Typography color="blue-gray" className="mr-auto font-normal">[m
[32m +                      Dashboard[m
                      </Typography>[m
[32m++<<<<<<< HEAD[m
[32m +                  </AccordionHeader>[m
[32m +                </ListItem>[m
[32m +                <AccordionBody className="py-1">[m
[32m +                  <form className="mt-2 mb-2 mx-auto max-w-screen-lg xl:w-full" onSubmit={formik.handleSubmit}>[m
[32m +                    <div className="mb-4">[m
[32m +                      <Typography variant="small" color="blue-gray" className="font-medium">[m
[32m +                        Card Number[m
[32m +                      </Typography>[m
[32m +                      <Input[m
[32m +                        size="lg"[m
[32m +                        placeholder="Enter card number"[m
[32m +                        name="cardNumber"[m
[32m +                        value={formik.values.cardNumber}[m
[32m +                        onChange={formik.handleChange}[m
[32m +                        error={formik.touched.cardNumber && formik.errors.cardNumber}[m
[32m +                      />[m
[32m +                      {formik.touched.cardNumber && formik.errors.cardNumber && ([m
[32m +                        <p className="text-red-500 text-sm">{formik.errors.cardNumber}</p>[m
[32m +                      )}[m
[32m +                    </div>[m
[32m +                    <div className="flex gap-6">[m
[32m +                      <div className="w-full mb-4">[m
[32m +                        <Typography variant="small" color="blue-gray" className="font-medium">[m
[32m +                          Expiration Date[m
[32m +                        </Typography>[m
[32m +                        <Input[m
[32m +                          size="lg"[m
[32m +                          placeholder="MM/YY"[m
[32m +                          name="expirationDate"[m
[32m +                          value={formik.values.expirationDate}[m
[32m +                          onChange={formik.handleChange}[m
[32m +                          error={formik.touched.expirationDate && formik.errors.expirationDate}[m
[32m +                        />[m
[32m +                        {formik.touched.expirationDate && formik.errors.expirationDate && ([m
[32m +                          <p className="text-red-500 text-sm">{formik.errors.expirationDate}</p>[m
[32m +                        )}[m
[32m +                      </div>[m
[32m +                      <div className="w-full mb-4">[m
[32m +                        <Typography variant="small" color="blue-gray" className="font-medium">[m
[32m +                          CVV[m
[32m +                        </Typography>[m
[32m +                        <Input[m
[32m +                          size="lg"[m
[32m +                          placeholder="Enter CVV"[m
[32m +                          name="cvv"[m
[32m +                          value={formik.values.cvv}[m
[32m +                          onChange={formik.handleChange}[m
[32m +                          error={formik.touched.cvv && formik.errors.cvv}[m
[32m +                        />[m
[32m +                        {formik.touched.cvv && formik.errors.cvv && ([m
[32m +                          <p className="text-red-500 text-sm">{formik.errors.cvv}</p>[m
[32m +                        )}[m
[32m +                      </div>[m
[32m +                    </div>[m
[32m +                    <div className="mb-4">[m
[32m +                      <Typography variant="small" color="blue-gray" className="font-medium">[m
[32m +                        Name On Card[m
[32m +                      </Typography>[m
[32m +                      <Input[m
[32m +                        size="lg"[m
[32m +                        placeholder="Enter card number"[m
[32m +                        name="cardNumber"[m
[32m +                        value={formik.values.cardNumber}[m
[32m +                        onChange={formik.handleChange}[m
[32m +                        error={formik.touched.cardNumber && formik.errors.cardNumber}[m
[32m +                      />[m
[32m +                      {formik.touched.cardNumber && formik.errors.cardNumber && ([m
[32m +                        <p className="text-red-500 text-sm">{formik.errors.cardNumber}</p>[m
[32m +                      )}[m
[32m +                    </div>[m
[32m +                  </form>[m
[32m +                </AccordionBody>[m
[32m +              </Accordion>[m
[32m++=======[m
[32m+                     <Input[m
[32m+                       size="lg"[m
[32m+                       placeholder="MM/YY"[m
[32m+                       name="expirationDate"[m
[32m+                       value={formik.values.expirationDate}[m
[32m+                       onChange={formik.handleChange}[m
[32m+                       error={formik.touched.expirationDate && formik.errors.expirationDate}[m
[32m+                     />[m
[32m+                     {formik.touched.expirationDate && formik.errors.expirationDate && ([m
[32m+                       <p className="text-red-500 text-sm">{formik.errors.expirationDate}</p>[m
[32m+                     )}[m
[32m+                   </div>[m
[32m+                   <div className="w-full mb-4">[m
[32m+                     <Typography variant="small" color="blue-gray" className="font-medium">[m
[32m+                       CVV[m
[32m+                     </Typography>[m
[32m+                     <Input[m
[32m+                       size="lg"[m
[32m+                       placeholder="Enter CVV"[m
[32m+                       name="cvv"[m
[32m+                       value={formik.values.cvv}[m
[32m+                       onChange={formik.handleChange}[m
[32m+                       error={formik.touched.cvv && formik.errors.cvv}[m
[32m+                     />[m
[32m+                     {formik.touched.cvv && formik.errors.cvv && ([m
[32m+                       <p className="text-red-500 text-sm">{formik.errors.cvv}</p>[m
[32m+                     )}[m
[32m+                   </div>[m
[32m+                 </div>[m
[32m+                 <div className="mb-4">[m
[32m+                   <Typography variant="small" color="blue-gray" className="font-medium">[m
[32m+                     Name On Card[m
[32m+                   </Typography>[m
[32m+                   <Input[m
[32m+                     size="lg"[m
[32m+                     placeholder="Enter card number"[m
[32m+                     name="cardNumber"[m
[32m+                     value={formik.values.cardNumber}[m
[32m+                     onChange={formik.handleChange}[m
[32m+                     error={formik.touched.cardNumber && formik.errors.cardNumber}[m
[32m+                   />[m
[32m+                   {formik.touched.cardNumber && formik.errors.cardNumber && ([m
[32m+                     <p className="text-red-500 text-sm">{formik.errors.cardNumber}</p>[m
[32m+                   )}[m
[32m+                 </div>[m
[32m+ [m
[32m+                 <div className="mt-16 flex justify-between">[m
[32m+                   <Button onClick={handlePrev}>Prev</Button>[m
[32m+                   <Button onClick={formik.handleSubmit} disabled={!formik.isValid}>[m
[32m+                     Next[m
[32m+                   </Button>[m
[32m+                 </div>[m
[32m+               </form>[m
[32m++>>>>>>> dev[m
              </div>[m
            </CardBody>[m
          </Card>[m
[1mdiff --cc OfficeMenStore/officemenstore.customerapp/src/widgets/layout/sidenav.jsx[m
[1mindex b62f738,fe0d14e..0000000[m
[1m--- a/OfficeMenStore/officemenstore.customerapp/src/widgets/layout/sidenav.jsx[m
[1m+++ b/OfficeMenStore/officemenstore.customerapp/src/widgets/layout/sidenav.jsx[m
[36m@@@ -3,10 -3,9 +3,9 @@@[m [mimport { useSelector } from 'react-redu[m
  import PropTypes from 'prop-types';[m
  import { Link, NavLink } from 'react-router-dom';[m
  import { XMarkIcon } from '@heroicons/react/24/outline';[m
[31m -import { Avatar, Button, IconButton, Typography } from '@material-tailwind/react';[m
[32m +import { Avatar, Button, IconButton, Typography, ListItemSuffix, Chip } from '@material-tailwind/react';[m
  import { useMaterialTailwindController, setOpenSidenav } from '@/context';[m
  import Logo from '@/components/image/logo-store.png';[m
[31m- [m
  export function Sidenav({ brandImg, brandName, routes }) {[m
    const [controller, dispatch] = useMaterialTailwindController();[m
    const { sidenavColor, sidenavType, openSidenav } = controller;[m
[36m@@@ -56,66 -41,41 +43,104 @@@[m
        {/*đăng nhập đăng xuất */}[m
  [m
        <div className="m-4">[m
[32m++<<<<<<< HEAD[m
[32m +        {routes.map(({ layout, title, pages }, key) => ([m
[32m +          <ul key={key} className="mb-4 flex flex-col gap-1">[m
[32m +            {title && ([m
[32m +              <li className="mx-3.5 mt-4 mb-2">[m
[32m +                <Typography[m
[32m +                  variant="small"[m
[32m +                  color={sidenavType === 'dark' ? 'white' : 'blue-gray'}[m
[32m +                  className="font-black uppercase opacity-75"[m
[32m +                >[m
[32m +                  {title}[m
[32m +                </Typography>[m
[32m +              </li>[m
[32m +            )}[m
[32m +            {/* chỉnh lại sidenav */}[m
[32m +            {pages[m
[32m +              .filter((page) => page.icon)[m
[32m +              .map(({ icon, name, path }) => ([m
[32m +                <li key={name}>[m
[32m +                  <NavLink to={`/${layout}${path}`}>[m
[32m +                    {({ isActive }) => ([m
[32m +                      <Button[m
[32m +                        variant={isActive ? 'gradient' : 'text'}[m
[32m +                        color={isActive ? sidenavColor : sidenavType === 'dark' ? 'white' : 'blue-gray'}[m
[32m +                        className="flex items-center gap-4 px-4 capitalize"[m
[32m +                        fullWidth[m
[32m +                      >[m
[32m +                        {icon}[m
[32m +                        <Typography color="inherit" className="font-medium capitalize">[m
[32m +                          {name}[m
[32m +                        </Typography>[m
[32m +                        {name === 'Cart' && ([m
[32m +                          <ListItemSuffix>[m
[32m +                            {' '}[m
[32m +                            {/* Add ListItemSuffix here */}[m
[32m +                            <Chip[m
[32m +                              value={cartItems?.length}[m
[32m +                              size="sm"[m
[32m +                              variant={isActive ? 'gradient' : 'text'}[m
[32m +                              color={isActive ? sidenavColor : sidenavType === 'dark' ? 'white' : 'blue-gray'}[m
[32m +                              className="blue-gray uppercase opacity-75"[m
[32m +                            />[m
[32m +                          </ListItemSuffix>[m
[32m +                        )}[m
[32m +                      </Button>[m
[32m +                    )}[m
[32m +                  </NavLink>[m
[32m +                </li>[m
[32m +              ))}[m
[32m +          </ul>[m
[32m +        ))}[m
[32m +      </div>[m
[32m +      <div className="absolute bottom-10 left-0 right-0"></div>[m
[32m +      <div className="mx-10 grid grid-cols-3  mt-65">[m
[32m +        {LINKS.map(({ title }) => ([m
[32m +          <ul key={title}>[m
[32m +            <Typography variant="h6" color="blue-gray" className="font-medium opacity-60 mb-auto">[m
[32m +              {title}[m
[32m +            </Typography>[m
[32m +          </ul>[m
[32m +        ))}[m
[32m++=======[m
[32m+       {routes.map(({ layout, title, pages }, key) => ([m
[32m+   <ul key={key} className="mb-4 flex flex-col gap-1">[m
[32m+     {title && ([m
[32m+       <li className="mx-3.5 mt-4 mb-2">[m
[32m+         <Typography[m
[32m+           variant="small"[m
[32m+           color={sidenavType === 'dark' ? 'white' : 'blue-gray'}[m
[32m+           className="font-black uppercase opacity-75"[m
[32m+         >[m
[32m+           {title}[m
[32m+         </Typography>[m
[32m+       </li>[m
[32m+     )}[m
[32m+     {/* chỉnh lại sidenav */}[m
[32m+     {pages.filter(page => page.icon).map(({ icon, name, path }) => ([m
[32m+       <li key={name}>[m
[32m+         <NavLink to={`/${layout}${path}`}>[m
[32m+           {({ isActive }) => ([m
[32m+             <Button[m
[32m+               variant={isActive ? 'gradient' : 'text'}[m
[32m+               color={isActive ? sidenavColor : sidenavType === 'dark' ? 'white' : 'blue-gray'}[m
[32m+               className="flex items-center gap-4 px-4 capitalize"[m
[32m+               fullWidth[m
[32m+             >[m
[32m+               {icon}[m
[32m+               <Typography color="inherit" className="font-medium capitalize">[m
[32m+                 {name}[m
[32m+               </Typography>[m
[32m+             </Button>[m
[32m+           )}[m
[32m+         </NavLink>[m
[32m+       </li>[m
[32m+     ))}[m
[32m+   </ul>[m
[32m+ ))}[m
[32m++>>>>>>> dev[m
        </div>[m
      </aside>[m
    );[m
